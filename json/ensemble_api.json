[
  {
    "header": "API Documentation",
    "data": "\nThe API endpoint /v1/ensemble accepts a geographical coordinate, a list of weather variables\nand responds with a JSON hourly weather forecast for 7 days for each ensemble member. Time always starts\nat 0:00 today. All URL parameters are listed below:\n\n| Parameter | Format | Required | Default | Description |\n| --- | --- | --- | --- | --- |\n| latitude, longitude | Floating point | Yes |  | Geographical WGS84 coordinates of the location. Multiple coordinates can be comma separated. E.g. &latitude=52.52,48.85&longitude=13.41,2.35. To return data for multiple locations the JSON output changes to a list of structures. CSV and XLSX formats add a column location\\_id. |\n| models | String array | Yes |  | Select one or more ensemble weather models as comma-separated list |\n| elevation | Floating point | No |  | The elevation used for statistical downscaling. Per default, a [90 meter digital elevation model is used](https://openmeteo.substack.com/p/improving-weather-forecasts-with \"Elevation based grid-cell selection explained\"). You can manually set the elevation to correctly match mountain peaks. If &elevation=nan is specified, downscaling will be disabled and the API uses the average grid-cell height. For multiple locations, elevation can also be comma separated. |\n| hourly | String array | No |  | A list of weather variables which should be returned. Values can be comma separated, or multiple &hourly= parameter in the URL can be used. |\n| temperature\\_unit | String | No | celsius | If fahrenheit is set, all temperature values are converted to Fahrenheit. |\n| wind\\_speed\\_unit | String | No | kmh | Other wind speed speed units: ms, mph and kn |\n| precipitation\\_unit | String | No | mm | Other precipitation amount units: inch |\n| timeformat | String | No | iso8601 | If format unixtime is selected, all time values are returned in UNIX epoch time in seconds. Please note that all timestamp are in GMT+0! For daily values with unix timestamps, please apply utc\\_offset\\_seconds again to get the correct date. |\n| timezone | String | No | GMT | If timezone is set, all timestamps are returned as local-time and data is returned starting at 00:00 local-time. Any time zone name from the [time zone database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) is supported. If auto is set as a time zone, the coordinates will be automatically resolved to the local time zone. For multiple coordinates, a comma separated list of timezones can be specified. |\n| past\\_days | Integer | No | 0 | If past\\_days is set, past weather data can be returned. |\n| forecast\\_days | Integer (0-35) | No | 7 | Per default, only 7 days are returned. Up to 35 days of forecast are possible. |\n| forecast\\_hoursforecast\\_minutely\\_15past\\_hourspast\\_minutely\\_15 | Integer (>0) | No |  | Similar to forecast\\_days, the number of timesteps of hourly and 15-minutely data can controlled. Instead of using the current day as a reference, the current hour or the current 15-minute time-step is used. |\n| start\\_dateend\\_date | String (yyyy-mm-dd) | No |  | The time interval to get weather data. A day must be specified as an ISO8601 date (e.g. 2022-06-30). |\n| start\\_hourend\\_hourstart\\_minutely\\_15end\\_minutely\\_15 | String (yyyy-mm-ddThh:mm) | No |  | The time interval to get weather data for hourly or 15 minutely data. Time must be specified as an ISO8601 date (e.g. 2022-06-30T12:00). |\n| cell\\_selection | String | No | land | Set a preference how grid-cells are selected. The default land finds a suitable grid-cell on land with [similar elevation to the requested coordinates using a 90-meter digital elevation model](https://openmeteo.substack.com/p/improving-weather-forecasts-with \"Elevation based grid-cell selection explained\"). sea prefers grid-cells on sea. nearest selects the nearest possible grid-cell. |\n| apikey | String | No |  | Only required to commercial use to access reserved API resources for customers. The server URL requires the prefix customer-. See [pricing](/en/pricing \"Pricing information to use the weather API commercially\") for more information. |\n\nAdditional optional URL parameters will be added. For API stability, no required parameters will\nbe added in the future!\n\n### Hourly Parameter Definition"
  },
  {
    "header": "Hourly Parameter Definition",
    "data": "\nThe parameter &hourly= accepts the following values. Most weather variables are given\nas an instantaneous value for the indicated hour. Some variables like precipitation are calculated\nfrom the preceding hour as an average or sum.\n\n| Variable | Valid time | Unit | Description |\n| --- | --- | --- | --- |\n| temperature\\_2m | Instant | \u00b0C (\u00b0F) | Air temperature at 2 meters above ground |\n| relative\\_humidity\\_2m | Instant | % | Relative humidity at 2 meters above ground |\n| dew\\_point\\_2m | Instant | \u00b0C (\u00b0F) | Dew point temperature at 2 meters above ground |\n| apparent\\_temperature | Instant | \u00b0C (\u00b0F) | Apparent temperature is the perceived feels-like temperature combining wind chill factor, relative humidity and solar radiation |\n| pressure\\_mslsurface\\_pressure | Instant | hPa | Atmospheric air pressure reduced to mean sea level (msl) or pressure at surface. Typically pressure on mean sea level is used in meteorology. Surface pressure gets lower with increasing elevation. |\n| cloud\\_cover | Instant | % | Total cloud cover as an area fraction |\n| wind\\_speed\\_10mwind\\_speed\\_80mwind\\_speed\\_120m | Instant | km/h (mph, m/s, knots) | Wind speed at 10, 80 or 120 meters above ground. Wind speed on 10 meters is the standard level. |\n| wind\\_direction\\_10mwind\\_direction\\_80mwind\\_direction\\_120m | Instant | \u00b0 | Wind direction at 10, 80 or 120 meters above ground |\n| wind\\_gusts\\_10m | Preceding hour max | km/h (mph, m/s, knots) | Gusts at 10 meters above ground as a maximum of the preceding hour |\n| shortwave\\_radiation | Preceding hour mean | W/m\u00b2 | Shortwave solar radiation as average of the preceding hour. This is equal to the total global horizontal irradiation |\n| direct\\_radiationdirect\\_normal\\_irradiance | Preceding hour mean | W/m\u00b2 | Direct solar radiation as average of the preceding hour on the horizontal plane and the normal plane (perpendicular to the sun). HRRR offers direct radiation directly. In GFS it is approximated based on [Razo, M\u00fcller Witwer](https://www.ise.fraunhofer.de/content/dam/ise/de/documents/publications/conference-paper/36-eupvsec-2019/Guzman_5CV31.pdf) |\n| diffuse\\_radiation | Preceding hour mean | W/m\u00b2 | Diffuse solar radiation as average of the preceding hour. HRRR offers diffuse radiation directly. In GFS it is approximated based on [Razo, M\u00fcller Witwer](https://www.ise.fraunhofer.de/content/dam/ise/de/documents/publications/conference-paper/36-eupvsec-2019/Guzman_5CV31.pdf) |\n| global\\_tilted\\_irradiance | Preceding hour mean | W/m\u00b2 | Total radiation received on a tilted pane as average of the preceding hour. The calculation is assuming a fixed albedo of 20% and in isotropic sky. Please specify tilt and azimuth parameter. Tilt ranges from 0\u00b0 to 90\u00b0 and is typically around 45\u00b0. Azimuth should be close to 0\u00b0 (0\u00b0 south, -90\u00b0 east, 90\u00b0 west). If azimuth is set to \"nan\", the calculation assumes a horizontal tracker. If tilt is set to \"nan\", it is assumed that the panel has a vertical tracker. If both are set to \"nan\", a bi-axial tracker is assumed. |\n| sunshine\\_duration | Preceding hour sum | Seconds | Number of seconds of sunshine of the preceding hour per hour calculated by direct normalized irradiance exceeding 120 W/m\u00b2, following the WMO definition. |\n| vapour\\_pressure\\_deficit | Instant | kPa | Vapor Pressure Deificit (VPD) in kilopascal (kPa). For high VPD (>1.6), water transpiration of plants increases. For low VPD (<0.4), transpiration decreases |\n| evapotranspiration | Preceding hour sum | mm (inch) | Evapotranspration from land surface and plants that weather models assumes for this location. Available soil water is considered. 1 mm evapotranspiration per hour equals 1 liter of water per spare meter. |\n| et0\\_fao\\_evapotranspiration | Preceding hour sum | mm (inch) | ET\u2080 Reference Evapotranspiration of a well watered grass field. Based on [FAO-56 Penman-Monteith equations](https://www.fao.org/3/x0490e/x0490e04.htm) ET\u2080 is calculated from temperature, wind speed, humidity and solar radiation. Unlimited soil water is assumed. ET\u2080 is commonly used to estimate the required irrigation for plants. |\n| weather\\_code | Instant | WMO code | Weather condition as a numeric code. Follow WMO weather interpretation codes. See table below for details. Weather code is calculated from cloud cover analysis, precipitation, snowfall, cape, lifted index and gusts. |\n| precipitation | Preceding hour sum | mm (inch) | Total precipitation (rain, showers, snow) sum of the preceding hour |\n| snowfall | Preceding hour sum | cm (inch) | Snowfall amount of the preceding hour in centimeters. For the water equivalent in millimeter, divide by 7. E.g. 7 cm snow = 10 mm precipitation water equivalent |\n| rain | Preceding hour sum | mm (inch) | Liquid precipitation of the preceding hour in millimeter |\n| weather\\_code | Instant | WMO code | Weather condition as a numeric code. Follow WMO weather interpretation codes. See table below for details. |\n| snow\\_depth | Instant | meters | Snow depth on the ground |\n| freezing\\_level\\_height | Instant | meters | Altitude above sea level of the 0\u00b0C level |\n| visibility | Instant | meters | Viewing distance in meters. Influenced by low clouds, humidity and aerosols. |\n| cape | Instant | J/kg | Convective available potential energy. See [Wikipedia](https://en.wikipedia.org/wiki/Convective_available_potential_energy). |\n| surface\\_temperature | Instant | \u00b0C (\u00b0F) | Temperature of the top soil level |\n| soil\\_temperature\\_0\\_to\\_10cmsoil\\_temperature\\_10\\_to\\_40cmsoil\\_temperature\\_40\\_to\\_100cmsoil\\_temperature\\_100\\_to\\_200cm | Instant | \u00b0C (\u00b0F) | Temperature in the soil as an average on 0-10, 10-40, 40-100 and 100-200 cm depths. |\n| soil\\_moisture\\_0\\_to\\_10cmsoil\\_moisture\\_10\\_to\\_40cmsoil\\_moisture\\_40\\_to\\_100cmsoil\\_moisture\\_100\\_to\\_200cm | Instant | m\u00b3/m\u00b3 | Average soil water content as volumetric mixing ratio at 0-10, 10-40, 40-100 and 100-200 cm depths. |\n\nOpen-Meteo\n\n* [Features](/en/features)\n* [Pricing](/en/pricing)\n* [About us & Contact](/en/about)\n* [License](/en/license)\n* [Terms & Privacy](/en/terms)\n\nWeather APIs\n\n* [Weather Forecast API](/en/docs)\n* [Historical Weather API](/en/docs/historical-weather-api)\n* [ECMWF API](/en/docs/ecmwf-api)\n* [GFS & HRRR Forecast API](/en/docs/gfs-api)\n* [M\u00e9t\u00e9o-France API](/en/docs/meteofrance-api)\n* [DWD ICON API](/en/docs/dwd-api)\n* [GEM API](/en/docs/gem-api)\n* [JMA API](/en/docs/jma-api)\n* [Met Norway API](/en/docs/metno-api)\n\nOther APIs\n\n* [Ensemble API](/en/docs/ensemble-api)\n* [Climate Change API](/en/docs/climate-api)\n* [Marine Weather API](/en/docs/marine-weather-api)\n* [Air Quality API](/en/docs/air-quality-api)\n* [Geocoding API](/en/docs/geocoding-api)\n* [Elevation API](/en/docs/elevation-api)\n* [Flood API](/en/docs/flood-api)\n\nExternal\n\n* [GitHub](https://github.com/open-meteo/open-meteo)\n* [Blog](https://openmeteo.substack.com/archive?sort=new)\n* [Twitter](https://twitter.com/open_meteo)\n* [Mastodon](https://fosstodon.org/%40openmeteo)\n* [Service status and uptime](https://status.open-meteo.com)\n* [Model Updates Overview](/en/docs/model-updates)\n \u00a9 2022-2025 Copyright: Open-Meteo.com\n"
  },
  {
    "api-endpoint": "https://ensemble-api.open-meteo.com/v1/ensemble"
  }
]