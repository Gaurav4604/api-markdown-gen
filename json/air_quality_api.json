[
  {
    "header": "API Documentation",
    "data": "\nThe API endpoint /v1/air-quality accepts a geographical coordinate, a list of weather\nvariables and responds with a JSON hourly air quality forecast for 5 days. Time always starts at\n0:00 today.\n\nAll URL parameters are listed below:\n\n| Parameter | Format | Required | Default | Description |\n| --- | --- | --- | --- | --- |\n| latitude, longitude | Floating point | Yes |  | Geographical WGS84 coordinates of the location. Multiple coordinates can be comma separated. E.g. &latitude=52.52,48.85&longitude=13.41,2.35. To return data for multiple locations the JSON output changes to a list of structures. CSV and XLSX formats add a column location\\_id. |\n| hourly | String array | No |  | A list of weather variables which should be returned. Values can be comma separated, or multiple &hourly= parameter in the URL can be used. |\n| current | String array | No |  | A list of variables to get current conditions. |\n| domains | String | No | auto | Automatically combine both domains auto or specifically select the European cams\\_europe or global domain cams\\_global. |\n| timeformat | String | No | iso8601 | If format unixtime is selected, all time values are returned in UNIX epoch time in seconds. Please note that all timestamp are in GMT+0! For daily values with unix timestamps, please apply utc\\_offset\\_seconds again to get the correct date. |\n| timezone | String | No | GMT | If timezone is set, all timestamps are returned as local-time and data is returned starting at 00:00 local-time. Any time zone name from the [time zone database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) is supported. If auto is set as a time zone, the coordinates will be automatically resolved to the local time zone. For multiple coordinates, a comma separated list of timezones can be specified. |\n| past\\_days | Integer (0-92) | No | 0 | If past\\_days is set, yesterday or the day before yesterday data are also returned. |\n| forecast\\_days | Integer (0-7) | No | 5 | Per default, 5 days are returned. Up to 7 days of forecast are possible. |\n| forecast\\_hourspast\\_hours | Integer (>0) | No |  | Similar to forecast\\_days, the number of timesteps of hourly data can controlled. Instead of using the current day as a reference, the current hour is used. |\n| start\\_dateend\\_date | String (yyyy-mm-dd) | No |  | The time interval to get weather data. A day must be specified as an ISO8601 date (e.g. 2022-06-30). |\n| start\\_hourend\\_hour | String (yyyy-mm-ddThh:mm) | No |  | The time interval to get weather data for hourly data. Time must be specified as an ISO8601 date (e.g. 2022-06-30T12:00). |\n| cell\\_selection | String | No | nearest | Set a preference how grid-cells are selected. The default land finds a suitable grid-cell on land with [similar elevation to the requested coordinates using a 90-meter digital elevation model](https://openmeteo.substack.com/p/improving-weather-forecasts-with \"Elevation based grid-cell selection explained\"). sea prefers grid-cells on sea. nearest selects the nearest possible grid-cell. |\n| apikey | String | No |  | Only required to commercial use to access reserved API resources for customers. The server URL requires the prefix customer-. See [pricing](/en/pricing \"Pricing information to use the weather API commercially\") for more information. |\n\nAdditional optional URL parameters will be added. For API stability, no required parameters will\nbe added in the future!\n\n### Hourly Parameter Definition"
  },
  {
    "header": "Hourly Parameter Definition",
    "data": "\nThe parameter &hourly= accepts the following values. Most weather variables are given\nas an instantaneous value for the indicated hour. Some variables like precipitation are calculated\nfrom the preceding hour as an average or sum.\n\n| Variable | Valid time | Unit | Description |\n| --- | --- | --- | --- |\n| pm10pm2\\_5 | Instant | \u03bcg/m\u00b3 | Particulate matter with diameter smaller than 10 \u00b5m (PM10) and smaller than 2.5 \u00b5m (PM2.5) close to surface (10 meter above ground) |\n| carbon\\_monoxidenitrogen\\_dioxidesulphur\\_dioxideozone | Instant | \u03bcg/m\u00b3 | Atmospheric gases close to surface (10 meter above ground) |\n| carbon\\_dioxide | Instant | ppm | CO2 close to surface (10 meter above ground) |\n| ammonia | Instant | \u03bcg/m\u00b3 | Ammonia concentration. Only available for Europe. |\n| aerosol\\_optical\\_depth | Instant | Dimensionless | Aerosol optical depth at 550 nm of the entire atmosphere to indicate haze. |\n| methane | Instant | \u03bcg/m\u00b3 | Methane close to surface (10 meter above ground) |\n| dust | Instant | \u03bcg/m\u00b3 | Saharan dust particles close to surface level (10 meter above ground). |\n| uv\\_indexuv\\_index\\_clear\\_sky | Instant | Index | UV index considering clouds and clear sky. See [ECMWF UV Index recommendation](https://confluence.ecmwf.int/display/CUSF/CAMS%2Bglobal%2BUV%2Bindex) for more information |\n| alder\\_pollenbirch\\_pollengrass\\_pollenmugwort\\_pollenolive\\_pollenragweed\\_pollen | Instant | Grains/m\u00b3 | Pollen for various plants. Only available in Europe as provided by CAMS European Air Quality forecast. |\n| european\\_aqieuropean\\_aqi\\_pm2\\_5european\\_aqi\\_pm10european\\_aqi\\_nitrogen\\_dioxideeuropean\\_aqi\\_ozoneeuropean\\_aqi\\_sulphur\\_dioxide | Instant | European AQI | European Air Quality Index (AQI) calculated for different particulate matter and gases individually. The consolidated european\\_aqi returns the maximum of all individual indices. Ranges from 0-20 (good), 20-40 (fair), 40-60 (moderate), 60-80 (poor), 80-100 (very poor) and exceeds 100 for extremely poor conditions. |\n| us\\_aqius\\_aqi\\_pm2\\_5us\\_aqi\\_pm10us\\_aqi\\_nitrogen\\_dioxideus\\_aqi\\_ozoneus\\_aqi\\_sulphur\\_dioxideus\\_aqi\\_carbon\\_monoxide | Instant | U.S. AQI | United States Air Quality Index (AQI) calculated for different particulate matter and gases individually. The consolidated us\\_aqi returns the maximum of all individual indices. Ranges from 0-50 (good), 51-100 (moderate), 101-150 (unhealthy for sensitive groups), 151-200 (unhealthy), 201-300 (very unhealthy) and 301-500 (hazardous). |\n\n### JSON Return Object"
  },
  {
    "header": "JSON Return Object",
    "data": "\nOn success a JSON object will be returned.\n\n```\n\n  \"latitude\": 52.52,\n  \"longitude\": 13.419,\n  \"elevation\": 44.812,\n  \"generationtime_ms\": 2.2119,\n  \"utc_offset_seconds\": 0,\n  \"timezone\": \"Europe/Berlin\",\n  \"timezone_abbreviation\": \"CEST\",\n  \"hourly\": {\n    \"time\": [\"2022-07-01T00:00\", \"2022-07-01T01:00\", \"2022-07-01T02:00\", ...],\n    \"pm10\": [1, 1.7, 1.7, 1.5, 1.5, 1.8, 2.0, 1.9, 1.3, ...]\n  },\n  \"hourly_units\": {\n    \"pm10\": \"\u03bcg/m\u00b3\"\n  },\n\n```\n\n| Parameter | Format | Description |\n| --- | --- | --- |\n| latitude, longitude | Floating point | WGS84 of the center of the weather grid-cell which was used to generate this forecast. This coordinate might be a few kilometers away from the requested coordinate. |\n| generationtime\\_ms | Floating point | Generation time of the weather forecast in milliseconds. This is mainly used for performance monitoring and improvements. |\n| utc\\_offset\\_seconds | Integer | Applied timezone offset from the &timezone= parameter. |\n| timezonetimezone\\_abbreviation | String | Timezone identifier (e.g. Europe/Berlin) and abbreviation (e.g. CEST) |\n| hourly | Object | For each selected weather variable, data will be returned as a floating point array. Additionally a time array will be returned with ISO8601 timestamps. |\n| hourly\\_units | Object | For each selected weather variable, the unit will be listed here. |\n\n### Errors"
  },
  {
    "header": "Errors",
    "data": "\nIn case an error occurs, for example a URL parameter is not correctly specified, a JSON error\nobject is returned with a HTTP 400 status code.\n\n```\n\n  \"error\": true,\n  \"reason\": \"Cannot initialize WeatherVariable from invalid String value tempeture_2m for key hourly\"\n\n```\n## Citation & Acknowledgement"
  },
  {
    "api-endpoint": "https://air-quality-api.open-meteo.com/v1/air-quality"
  }
]