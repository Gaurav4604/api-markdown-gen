[
  {
    "header": "API Documentation",
    "data": "\nThe API endpoint /v1/marine accepts a geographical coordinate, a list of marine variables\nand responds with a JSON hourly marine weather forecast for 7 days. Time always starts at 0:00 today.\nAll URL parameters are listed below:\n\n| Parameter | Format | Required | Default | Description |\n| --- | --- | --- | --- | --- |\n| latitude, longitude | Floating point | Yes |  | Geographical WGS84 coordinates of the location. Multiple coordinates can be comma separated. E.g. &latitude=52.52,48.85&longitude=13.41,2.35. To return data for multiple locations the JSON output changes to a list of structures. CSV and XLSX formats add a column location\\_id. |\n| hourly | String array | No |  | A list of weather variables which should be returned. Values can be comma separated, or multiple &hourly= parameter in the URL can be used. |\n| daily | String array | No |  | A list of daily weather variable aggregations which should be returned. Values can be comma separated, or multiple &daily= parameter in the URL can be used. If daily weather variables are specified, parameter timezone is required. |\n| current | String array | No |  | A list of variables to get current conditions. |\n| timeformat | String | No | iso8601 | If format unixtime is selected, all time values are returned in UNIX epoch time in seconds. Please note that all timestamp are in GMT+0! For daily values with unix timestamps, please apply utc\\_offset\\_seconds again to get the correct date. |\n| timezone | String | No | GMT | If timezone is set, all timestamps are returned as local-time and data is returned starting at 00:00 local-time. Any time zone name from the [time zone database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) is supported. If auto is set as a time zone, the coordinates will be automatically resolved to the local time zone. For multiple coordinates, a comma separated list of timezones can be specified. |\n| past\\_days | Integer (0-92) | No | 0 | If past\\_days is set, yesterday or the day before yesterday data are also returned. |\n| forecast\\_days | Integer (0-8) | No | 5 | Per default, 7 days are returned. Up to 8 days of forecast are possible. |\n| forecast\\_hourspast\\_hours | Integer (>0) | No |  | Similar to forecast\\_days, the number of timesteps of hourly data can controlled. Instead of using the current day as a reference, the current hour is used. |\n| start\\_dateend\\_date | String (yyyy-mm-dd) | No |  | The time interval to get weather data. A day must be specified as an ISO8601 date (e.g. 2022-06-30). |\n| start\\_hourend\\_hour | String (yyyy-mm-ddThh:mm) | No |  | The time interval to get weather data for hourly data. Time must be specified as an ISO8601 date (e.g. 2022-06-30T12:00). |\n| length\\_unit | String | No | metric | Options metric and imperial |\n| cell\\_selection | String | No | sea | Set a preference how grid-cells are selected. The default land finds a suitable grid-cell on land with [similar elevation to the requested coordinates using a 90-meter digital elevation model](https://openmeteo.substack.com/p/improving-weather-forecasts-with \"Elevation based grid-cell selection explained\"). sea prefers grid-cells on sea. nearest selects the nearest possible grid-cell. |\n| apikey | String | No |  | Only required to commercial use to access reserved API resources for customers. The server URL requires the prefix customer-. See [pricing](/en/pricing \"Pricing information to use the weather API commercially\") for more information. |\n\nAdditional optional URL parameters will be added. For API stability, no required parameters will\nbe added in the future!\n\n### Hourly Parameter Definition"
  },
  {
    "header": "Hourly Parameter Definition",
    "data": "\nThe parameter &hourly= accepts the following values. Most weather variables are given\nas an instantaneous value for the indicated hour. Some variables like precipitation are calculated\nfrom the preceding hour as an average or sum.\n\n| Variable | Valid time | Unit | Description |\n| --- | --- | --- | --- |\n| wave\\_heightwind\\_wave\\_heightswell\\_wave\\_height | Instant | Meter | Wave height of significant mean, wind and swell waves. Wave directions are always reported as the direction the waves come from. 0\u00b0 = From north towards south; 90\u00b0 = From east |\n| wave\\_directionwind\\_wave\\_directionswell\\_wave\\_direction | Instant | \u00b0 | Mean direction of mean, wind and swell waves |\n| wave\\_periodwind\\_wave\\_periodswell\\_wave\\_period | Instant | Seconds | Period between mean, wind and swell waves. |\n| wind\\_wave\\_peak\\_periodswell\\_wave\\_peak\\_period | Instant | Seconds | Peak period between wind and swell waves. |\n| ocean\\_current\\_velocity | Instant | km/h (mph, m/s, knots) | Velocity of ocean current considering Eulerian, Waves and Tides. |\n| ocean\\_current\\_direction | Instant | \u00b0 | Direction following the flow of the current. E.g. where the current is heading towards. 0\u00b0 = Going north; 90\u00b0 = Towards east. |\n\n### Daily Parameter Definition"
  },
  {
    "header": "Daily Parameter Definition",
    "data": "\nAggregations are a simple 24 hour aggregation from hourly values. The parameter &daily= accepts the following values:\n\n| Variable | Unit | Description |\n| --- | --- | --- |\n| wave\\_height\\_maxwind\\_wave\\_height\\_maxswell\\_wave\\_height\\_max | Meter | Maximum wave height on a given day for mean, wind and swell waves |\n| wave\\_direction\\_dominantwind\\_wave\\_direction\\_dominantswell\\_wave\\_direction\\_dominant | \u00b0 | Dominant wave direction of mean, wind and swell waves |\n| wave\\_period\\_maxwind\\_wave\\_period\\_maxswell\\_wave\\_period\\_max | Seconds | Maximum wave period of mean, wind and swell |\n| wind\\_wave\\_peak\\_period\\_maxswell\\_wave\\_peak\\_period\\_max | Seconds | Maximum peak period between wind and swell waves. |\n\n### JSON Return Object"
  },
  {
    "header": "JSON Return Object",
    "data": "\nOn success a JSON object will be returned.\n\n```\n\n  \"latitude\": 52.52,\n  \"longitude\": 13.419,\n  \"elevation\": 44.812,\n  \"generationtime_ms\": 2.2119,\n  \"utc_offset_seconds\": 0,\n  \"timezone\": \"Europe/Berlin\",\n  \"timezone_abbreviation\": \"CEST\",\n  \"hourly\": {\n    \"time\": [\"2022-07-01T00:00\", \"2022-07-01T01:00\", \"2022-07-01T02:00\", ...],\n    \"wave_height\": [1, 1.7, 1.7, 1.5, 1.5, 1.8, 2.0, 1.9, 1.3, ...]\n  },\n  \"hourly_units\": {\n    \"wave_height\": \"m\"\n  },\n\n```\n\n| Parameter | Format | Description |\n| --- | --- | --- |\n| latitude, longitude | Floating point | WGS84 of the center of the weather grid-cell which was used to generate this forecast. This coordinate might be a few kilometers away from the requested coordinate. |\n| generationtime\\_ms | Floating point | Generation time of the weather forecast in milliseconds. This is mainly used for performance monitoring and improvements. |\n| utc\\_offset\\_seconds | Integer | Applied timezone offset from the &timezone= parameter. |\n| timezonetimezone\\_abbreviation | String | Timezone identifier (e.g. Europe/Berlin) and abbreviation (e.g. CEST) |\n| hourly | Object | For each selected weather variable, data will be returned as a floating point array. Additionally a time array will be returned with ISO8601 timestamps. |\n| hourly\\_units | Object | For each selected weather variable, the unit will be listed here. |\n| daily | Object | For each selected daily weather variable, data will be returned as a floating point array. Additionally a time array will be returned with ISO8601 timestamps. |\n| daily\\_units | Object | For each selected daily weather variable, the unit will be listed here. |\n\n### Errors"
  },
  {
    "header": "Errors",
    "data": "\nIn case an error occurs, for example a URL parameter is not correctly specified, a JSON error\nobject is returned with a HTTP 400 status code.\n\n```\n\n  \"error\": true,\n  \"reason\": \"Cannot initialize WeatherVariable from invalid String value tempeture_2m for key hourly\"\n\n```\n## Citation & Acknowledgement"
  },
  {
    "api-endpoint": "https://marine-api.open-meteo.com/v1/marine"
  }
]